//// Generated by the protocol buffer compiler.  DO NOT EDIT!
//// source: common.proto
//
//// This CPP symbol can be defined to use imports that match up to the framework
//// imports needed when using CocoaPods.
//#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
// #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
//#endif
//
//#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
// #import <Protobuf/GPBProtocolBuffers.h>
//#else
// #import "GPBProtocolBuffers.h"
//#endif
//
//#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
//#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
//#endif
//#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
//#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
//#endif
//
//// @@protoc_insertion_point(imports)
//
//#pragma clang diagnostic push
//#pragma clang diagnostic ignored "-Wdeprecated-declarations"
//
//CF_EXTERN_C_BEGIN
//
//NS_ASSUME_NONNULL_BEGIN
//
//#pragma mark - Enum Constant_Command
//
///**
// * ALL CMD should based on following rules
// * default method List(0~1) Create(2~3) Delete(4~5) Update(6~7) Get(8~9)
// * if not use (a~f)
// * all request cmd should be an even number
// * and all resoponse cmd should be an odd number(request + 1)
// **/
//typedef GPB_ENUM(Constant_Command) {
//  /** INIT */
//  Constant_Command_CmdInitRequest = 266,
//  Constant_Command_CmdInitResponse = 267,
//  Constant_Command_CmdNeedRegisterDeviceRequest = 268,
//  Constant_Command_CmdNeedRegisterDeviceResponse = 269,
//
//  /** CMD DEVICE METHOD */
//  Constant_Command_CmdDeviceRegisterRequest = 274,
//  Constant_Command_CmdDeviceRegisterResponse = 275,
//  Constant_Command_CmdDeviceDeleteRequest = 276,
//  Constant_Command_CmdDeviceDeleteResponse = 277,
//  Constant_Command_CmdDeviceUpdateRequest = 278,
//  Constant_Command_CmdDeviceUpdateResponse = 279,
//
//  /** CMD NODE METHOD */
//  Constant_Command_CmdNodeListRequest = 288,
//  Constant_Command_CmdNodeListResponse = 289,
//  Constant_Command_CmdNodeGenRequest = 290,
//  Constant_Command_CmdNodeGenResponse = 291,
//  Constant_Command_CmdNodeRemoveRequest = 292,
//  Constant_Command_CmdNodeRemoveResponse = 293,
//  Constant_Command_CmdNodeResetRequest = 294,
//  Constant_Command_CmdNodeResetResponse = 295,
//
//  /** CMD PLAN METHOD */
//  Constant_Command_CmdPlanTypeListRequest = 304,
//  Constant_Command_CmdPlanTypeListResponse = 305,
//  Constant_Command_CmdPlanTypeCreateRequest = 306,
//  Constant_Command_CmdPlanTypeCreateResponse = 307,
//  Constant_Command_CmdPlanTypeDeleteRequest = 308,
//  Constant_Command_CmdPlanTypeDeleteResponse = 309,
//  Constant_Command_CmdPlanTypeUpdateRequest = 310,
//  Constant_Command_CmdPlanTypeUpdateResponse = 311,
//  Constant_Command_CmdPlanTypeGetRequest = 312,
//  Constant_Command_CmdPlanTypeGetResponse = 313,
//  Constant_Command_CmdPlanListRequest = 320,
//  Constant_Command_CmdPlanListResponse = 321,
//  Constant_Command_CmdPlanCreateRequest = 322,
//  Constant_Command_CmdPlanCreateResponse = 323,
//  Constant_Command_CmdPlanDeleteRequest = 324,
//  Constant_Command_CmdPlanDeleteResponse = 325,
//  Constant_Command_CmdPlanUpdateRequest = 326,
//  Constant_Command_CmdPlanUpdateResponse = 327,
//  Constant_Command_CmdPlanGetRequest = 328,
//  Constant_Command_CmdPlanGetResponse = 329,
//
//  /** TEST */
//  Constant_Command_CmdEchoRequest = 512,
//  Constant_Command_CmdEchoResponse = 513,
//  Constant_Command_CmdMessageSendRequest = 2,
//  Constant_Command_CmdMessageSendResponse = 3,
//  Constant_Command_CmdMessageNotifyRequest = 4,
//  Constant_Command_CmdMessageNotifyResponse = 5,
//};
//
//GPBEnumDescriptor *Constant_Command_EnumDescriptor(void);
//
///**
// * Checks to see if the given value is defined by the enum or was not known at
// * the time this source was generated.
// **/
//BOOL Constant_Command_IsValidValue(int32_t value);
//
//#pragma mark - Enum Constant_Result
//
//typedef GPB_ENUM(Constant_Result) {
//  Constant_Result_Success = 0,
//
//  /** common error */
//  Constant_Result_ErrorParams = 1,
//  Constant_Result_ErrorServer = 2,
//  Constant_Result_ErrorUsernameExist = 3,
//  Constant_Result_ErrorUsernameNotExist = 4,
//  Constant_Result_ErrorForbidden = 5,
//};
//
//GPBEnumDescriptor *Constant_Result_EnumDescriptor(void);
//
///**
// * Checks to see if the given value is defined by the enum or was not known at
// * the time this source was generated.
// **/
//BOOL Constant_Result_IsValidValue(int32_t value);
//
//#pragma mark - CommonRoot
//
///**
// * Exposes the extension registry for this file.
// *
// * The base class provides:
// * @code
// *   + (GPBExtensionRegistry *)extensionRegistry;
// * @endcode
// * which is a @c GPBExtensionRegistry that includes all the extensions defined by
// * this file and all files that it depends on.
// **/
//@interface CommonRoot : GPBRootObject
//@end
//
//#pragma mark - Constant
//
///**
// * Constant
// **/
//@interface Constant : GPBMessage
//
//@end
//
//#pragma mark - MessageInfo
//
//typedef GPB_ENUM(MessageInfo_FieldNumber) {
//  MessageInfo_FieldNumber_FromId = 1,
//  MessageInfo_FieldNumber_Content = 2,
//};
//
//@interface MessageInfo : GPBMessage
//
//@property(nonatomic, readwrite, copy, null_resettable) NSString *fromId;
///** Test to see if @c fromId has been set. */
//@property(nonatomic, readwrite) BOOL hasFromId;
//
//@property(nonatomic, readwrite, copy, null_resettable) NSString *content;
///** Test to see if @c content has been set. */
//@property(nonatomic, readwrite) BOOL hasContent;
//
//@end
//
//#pragma mark - PacketHeader
//
//typedef GPB_ENUM(PacketHeader_FieldNumber) {
//  PacketHeader_FieldNumber_HeaderId = 1,
//  PacketHeader_FieldNumber_Version = 2,
//  PacketHeader_FieldNumber_Command = 3,
//  PacketHeader_FieldNumber_Result = 4,
//  PacketHeader_FieldNumber_Timestamp = 5,
//};
//
//@interface PacketHeader : GPBMessage
//
//@property(nonatomic, readwrite, copy, null_resettable) NSString *headerId;
///** Test to see if @c headerId has been set. */
//@property(nonatomic, readwrite) BOOL hasHeaderId;
//
//@property(nonatomic, readwrite) uint32_t version;
//
//@property(nonatomic, readwrite) BOOL hasVersion;
///** Constant.Command */
//@property(nonatomic, readwrite) uint32_t command;
//
//@property(nonatomic, readwrite) BOOL hasCommand;
///** Constant.Result */
//@property(nonatomic, readwrite) uint32_t result;
//
//@property(nonatomic, readwrite) BOOL hasResult;
//@property(nonatomic, readwrite) uint32_t timestamp;
//
//@property(nonatomic, readwrite) BOOL hasTimestamp;
//@end
//
//#pragma mark - BaseResponse
//
//typedef GPB_ENUM(BaseResponse_FieldNumber) {
//  BaseResponse_FieldNumber_Code = 1,
//  BaseResponse_FieldNumber_DetailCode = 2,
//  BaseResponse_FieldNumber_IsSuccessfully = 3,
//  BaseResponse_FieldNumber_Msg = 4,
//};
//
//@interface BaseResponse : GPBMessage
//
//@property(nonatomic, readwrite) uint32_t code;
//
//@property(nonatomic, readwrite) BOOL hasCode;
//@property(nonatomic, readwrite) uint32_t detailCode;
//
//@property(nonatomic, readwrite) BOOL hasDetailCode;
//@property(nonatomic, readwrite) BOOL isSuccessfully;
//
//@property(nonatomic, readwrite) BOOL hasIsSuccessfully;
//@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;
///** Test to see if @c msg has been set. */
//@property(nonatomic, readwrite) BOOL hasMsg;
//
//@end
//
//NS_ASSUME_NONNULL_END
//
//CF_EXTERN_C_END
//
//#pragma clang diagnostic pop
//
//// @@protoc_insertion_point(global_scope)
